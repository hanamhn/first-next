{"ast":null,"code":"import { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/huynhnguyenhanam/Desktop/first-next/pages/post.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport { withRouter } from \"next/router\";\n\nconst Post = ({\n  id,\n  comments\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Comment for Post #\", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this), comments.map(comment => /*#__PURE__*/_createElement(Comment, _objectSpread(_objectSpread({}, comment), {}, {\n    key: comment.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    },\n    __self: this\n  })))]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n\nconst Comment = ({\n  email,\n  body\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n    children: email\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: body\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  debugger;\n  console.log(query);\n  const res = await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=3`);\n  const {\n    data\n  } = res;\n  console.log(data[0]);\n  return _objectSpread(_objectSpread({}, query), {}, {\n    comments: data\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/huynhnguyenhanam/Desktop/first-next/pages/post.js"],"names":["axios","withRouter","Post","id","comments","map","comment","Comment","email","body","getInitialProps","query","console","log","res","get","data"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,aAA3B;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAD,kBACX;AAAA,0BACE;AAAA,qCAAuBD,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEGC,QAAQ,CAACC,GAAT,CAAcC,OAAD,iBACZ,eAAC,OAAD,kCAAaA,OAAb;AAAsB,IAAA,GAAG,EAAEA,OAAO,CAACH,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AASA,MAAMI,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,kBACd;AAAA,0BACE;AAAA,cAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,cAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAOAP,IAAI,CAACQ,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC1C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAMG,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CACf,wDADe,CAAlB;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAWF,GAAjB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAAC,CAAD,CAAhB;AACA,yCAAYL,KAAZ;AAAmBP,IAAAA,QAAQ,EAAEY;AAA7B;AACD,CAVD;;AAWA,eAAed,IAAf","sourcesContent":["import axios from \"axios\";\nimport { withRouter } from \"next/router\";\nconst Post = ({ id, comments }) => (\n  <div>\n    <h1>Comment for Post #{id}</h1>\n    {comments.map((comment) => (\n      <Comment {...comment} key={comment.id} />\n    ))}\n  </div>\n);\n\nconst Comment = ({ email, body }) => (\n  <div>\n    <h5>{email}</h5>\n    <p>{body}</p>\n  </div>\n);\n\nPost.getInitialProps = async ({ query }) => {\n  debugger;\n  console.log(query);\n\n  const res = await axios.get(\n    `https://jsonplaceholder.typicode.com/comments?postId=3`\n  );\n  const { data } = res;\n  console.log(data[0]);\n  return { ...query, comments: data };\n};\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}